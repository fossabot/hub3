// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hub3/experimental/ead/ead.proto

package ead

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeList struct {
	Type                 string   `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	Label                []string `protobuf:"bytes,2,rep,name=Label" json:"Label,omitempty"`
	Nodes                []*Node  `protobuf:"bytes,3,rep,name=Nodes" json:"Nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeList) Reset()         { *m = NodeList{} }
func (m *NodeList) String() string { return proto.CompactTextString(m) }
func (*NodeList) ProtoMessage()    {}
func (*NodeList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead_9d2923d7067ae264, []int{0}
}
func (m *NodeList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeList.Unmarshal(m, b)
}
func (m *NodeList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeList.Marshal(b, m, deterministic)
}
func (dst *NodeList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeList.Merge(dst, src)
}
func (m *NodeList) XXX_Size() int {
	return xxx_messageInfo_NodeList.Size(m)
}
func (m *NodeList) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeList.DiscardUnknown(m)
}

var xxx_messageInfo_NodeList proto.InternalMessageInfo

func (m *NodeList) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NodeList) GetLabel() []string {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *NodeList) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Node struct {
	CTag                 string   `protobuf:"bytes,1,opt,name=CTag" json:"CTag,omitempty"`
	Depth                int32    `protobuf:"varint,7,opt,name=Depth" json:"Depth,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=Type" json:"Type,omitempty"`
	SubType              string   `protobuf:"bytes,6,opt,name=SubType" json:"SubType,omitempty"`
	Header               *Header  `protobuf:"bytes,3,opt,name=Header" json:"Header,omitempty"`
	HTML                 string   `protobuf:"bytes,5,opt,name=HTML" json:"HTML,omitempty"`
	Nodes                []*Node  `protobuf:"bytes,4,rep,name=Nodes" json:"Nodes,omitempty"`
	Order                uint64   `protobuf:"varint,8,opt,name=Order" json:"Order,omitempty"`
	ParentIDs            []string `protobuf:"bytes,9,rep,name=ParentIDs" json:"ParentIDs,omitempty"`
	Path                 string   `protobuf:"bytes,10,opt,name=Path" json:"Path,omitempty"`
	BranchID             string   `protobuf:"bytes,11,opt,name=BranchID" json:"BranchID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead_9d2923d7067ae264, []int{1}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetCTag() string {
	if m != nil {
		return m.CTag
	}
	return ""
}

func (m *Node) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *Node) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Node) GetSubType() string {
	if m != nil {
		return m.SubType
	}
	return ""
}

func (m *Node) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Node) GetHTML() string {
	if m != nil {
		return m.HTML
	}
	return ""
}

func (m *Node) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Node) GetOrder() uint64 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *Node) GetParentIDs() []string {
	if m != nil {
		return m.ParentIDs
	}
	return nil
}

func (m *Node) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Node) GetBranchID() string {
	if m != nil {
		return m.BranchID
	}
	return ""
}

type Header struct {
	Type                 string      `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	InventoryNumber      string      `protobuf:"bytes,7,opt,name=InventoryNumber" json:"InventoryNumber,omitempty"`
	ID                   []*NodeID   `protobuf:"bytes,2,rep,name=ID" json:"ID,omitempty"`
	Label                []string    `protobuf:"bytes,3,rep,name=Label" json:"Label,omitempty"`
	Date                 []*NodeDate `protobuf:"bytes,4,rep,name=Date" json:"Date,omitempty"`
	Physdesc             string      `protobuf:"bytes,5,opt,name=Physdesc" json:"Physdesc,omitempty"`
	DateAsLabel          bool        `protobuf:"varint,6,opt,name=DateAsLabel" json:"DateAsLabel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead_9d2923d7067ae264, []int{2}
}
func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (dst *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(dst, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Header) GetInventoryNumber() string {
	if m != nil {
		return m.InventoryNumber
	}
	return ""
}

func (m *Header) GetID() []*NodeID {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *Header) GetLabel() []string {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *Header) GetDate() []*NodeDate {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Header) GetPhysdesc() string {
	if m != nil {
		return m.Physdesc
	}
	return ""
}

func (m *Header) GetDateAsLabel() bool {
	if m != nil {
		return m.DateAsLabel
	}
	return false
}

type NodeID struct {
	TypeID               string   `protobuf:"bytes,1,opt,name=TypeID" json:"TypeID,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=Type" json:"Type,omitempty"`
	Audience             string   `protobuf:"bytes,3,opt,name=Audience" json:"Audience,omitempty"`
	ID                   string   `protobuf:"bytes,4,opt,name=ID" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeID) Reset()         { *m = NodeID{} }
func (m *NodeID) String() string { return proto.CompactTextString(m) }
func (*NodeID) ProtoMessage()    {}
func (*NodeID) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead_9d2923d7067ae264, []int{3}
}
func (m *NodeID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeID.Unmarshal(m, b)
}
func (m *NodeID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeID.Marshal(b, m, deterministic)
}
func (dst *NodeID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeID.Merge(dst, src)
}
func (m *NodeID) XXX_Size() int {
	return xxx_messageInfo_NodeID.Size(m)
}
func (m *NodeID) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeID.DiscardUnknown(m)
}

var xxx_messageInfo_NodeID proto.InternalMessageInfo

func (m *NodeID) GetTypeID() string {
	if m != nil {
		return m.TypeID
	}
	return ""
}

func (m *NodeID) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NodeID) GetAudience() string {
	if m != nil {
		return m.Audience
	}
	return ""
}

func (m *NodeID) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type NodeDate struct {
	Calendar             string   `protobuf:"bytes,1,opt,name=Calendar" json:"Calendar,omitempty"`
	Era                  string   `protobuf:"bytes,2,opt,name=Era" json:"Era,omitempty"`
	Normal               string   `protobuf:"bytes,3,opt,name=Normal" json:"Normal,omitempty"`
	Label                string   `protobuf:"bytes,4,opt,name=Label" json:"Label,omitempty"`
	Type                 string   `protobuf:"bytes,5,opt,name=Type" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeDate) Reset()         { *m = NodeDate{} }
func (m *NodeDate) String() string { return proto.CompactTextString(m) }
func (*NodeDate) ProtoMessage()    {}
func (*NodeDate) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead_9d2923d7067ae264, []int{4}
}
func (m *NodeDate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeDate.Unmarshal(m, b)
}
func (m *NodeDate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeDate.Marshal(b, m, deterministic)
}
func (dst *NodeDate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeDate.Merge(dst, src)
}
func (m *NodeDate) XXX_Size() int {
	return xxx_messageInfo_NodeDate.Size(m)
}
func (m *NodeDate) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeDate.DiscardUnknown(m)
}

var xxx_messageInfo_NodeDate proto.InternalMessageInfo

func (m *NodeDate) GetCalendar() string {
	if m != nil {
		return m.Calendar
	}
	return ""
}

func (m *NodeDate) GetEra() string {
	if m != nil {
		return m.Era
	}
	return ""
}

func (m *NodeDate) GetNormal() string {
	if m != nil {
		return m.Normal
	}
	return ""
}

func (m *NodeDate) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *NodeDate) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func init() {
	proto.RegisterType((*NodeList)(nil), "ead.NodeList")
	proto.RegisterType((*Node)(nil), "ead.Node")
	proto.RegisterType((*Header)(nil), "ead.Header")
	proto.RegisterType((*NodeID)(nil), "ead.NodeID")
	proto.RegisterType((*NodeDate)(nil), "ead.NodeDate")
}

func init() {
	proto.RegisterFile("hub3/experimental/ead/ead.proto", fileDescriptor_ead_9d2923d7067ae264)
}

var fileDescriptor_ead_9d2923d7067ae264 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xdb, 0x8a, 0xd4, 0x40,
	0x10, 0x25, 0xd7, 0x4d, 0x2a, 0x78, 0xa1, 0x11, 0x69, 0x56, 0x61, 0x63, 0x7c, 0xc9, 0xd3, 0x2e,
	0xec, 0x7e, 0xc1, 0xba, 0x11, 0x36, 0x30, 0x8e, 0x43, 0x3b, 0xbe, 0xdb, 0x99, 0x14, 0x66, 0x60,
	0x26, 0x19, 0x3a, 0x19, 0x71, 0xfc, 0x16, 0xbf, 0xcc, 0xaf, 0x91, 0xea, 0xee, 0x24, 0x83, 0xee,
	0x43, 0xa0, 0xce, 0xe9, 0xf4, 0x39, 0xa7, 0xaa, 0x12, 0xb8, 0x6a, 0x8e, 0xd5, 0xdd, 0x0d, 0xfe,
	0x3c, 0xa0, 0xda, 0xee, 0xb1, 0x1d, 0xe4, 0xee, 0x06, 0x65, 0x4d, 0xcf, 0xf5, 0x41, 0x75, 0x43,
	0xc7, 0x3c, 0x94, 0x75, 0xf6, 0x15, 0xa2, 0x65, 0x57, 0xe3, 0x62, 0xdb, 0x0f, 0x8c, 0x81, 0xbf,
	0x3e, 0x1d, 0x90, 0x3b, 0xa9, 0x93, 0xc7, 0x42, 0xd7, 0xec, 0x15, 0x04, 0x0b, 0x59, 0xe1, 0x8e,
	0xbb, 0xa9, 0x97, 0xc7, 0xc2, 0x00, 0x76, 0x05, 0x01, 0xdd, 0xea, 0xb9, 0x97, 0x7a, 0x79, 0x72,
	0x1b, 0x5f, 0x93, 0x2a, 0x31, 0xc2, 0xf0, 0xd9, 0x6f, 0x17, 0x7c, 0xaa, 0x48, 0xf3, 0x61, 0x2d,
	0xbf, 0x8f, 0x9a, 0x54, 0x93, 0x66, 0x81, 0x87, 0xa1, 0xe1, 0x17, 0xa9, 0x93, 0x07, 0xc2, 0x80,
	0xc9, 0xdd, 0x3d, 0x73, 0xe7, 0x70, 0xf1, 0xe5, 0x58, 0x69, 0x3a, 0xd4, 0xf4, 0x08, 0xd9, 0x7b,
	0x08, 0x1f, 0x51, 0xd6, 0xa8, 0xb8, 0x97, 0x3a, 0x79, 0x72, 0x9b, 0xe8, 0x08, 0x86, 0x12, 0xf6,
	0x88, 0x24, 0x1f, 0xd7, 0x9f, 0x16, 0x3c, 0x30, 0x92, 0x54, 0xcf, 0xd1, 0xfd, 0xa7, 0xa3, 0x53,
	0xba, 0xcf, 0x8a, 0x84, 0xa3, 0xd4, 0xc9, 0x7d, 0x61, 0x00, 0x7b, 0x0b, 0xf1, 0x4a, 0x2a, 0x6c,
	0x87, 0xb2, 0xe8, 0x79, 0xac, 0x67, 0x31, 0x13, 0x64, 0xb4, 0x92, 0x43, 0xc3, 0xc1, 0x18, 0x51,
	0xcd, 0x2e, 0x21, 0xfa, 0xa0, 0x64, 0xbb, 0x69, 0xca, 0x82, 0x27, 0x9a, 0x9f, 0x70, 0xf6, 0xc7,
	0x81, 0xb3, 0x8c, 0xff, 0x0d, 0x3d, 0x87, 0x17, 0x65, 0xfb, 0x03, 0xdb, 0xa1, 0x53, 0xa7, 0xe5,
	0x71, 0x5f, 0xa1, 0xd2, 0xa3, 0x8a, 0xc5, 0xbf, 0x34, 0x7b, 0x03, 0x6e, 0x59, 0xe8, 0xdd, 0x8c,
	0x23, 0xa0, 0x26, 0xca, 0x42, 0xb8, 0x65, 0x31, 0xef, 0xce, 0x3b, 0xdf, 0xdd, 0x3b, 0xf0, 0x0b,
	0x39, 0xa0, 0xed, 0xff, 0xd9, 0x74, 0x89, 0x48, 0xa1, 0x8f, 0x28, 0xfa, 0xaa, 0x39, 0xf5, 0x35,
	0xf6, 0x1b, 0x3b, 0xbb, 0x09, 0xb3, 0x14, 0x12, 0x7a, 0xe7, 0xbe, 0x37, 0xd2, 0xb4, 0x96, 0x48,
	0x9c, 0x53, 0xd9, 0x37, 0x08, 0x4d, 0x08, 0xf6, 0x1a, 0x42, 0xea, 0xa7, 0x2c, 0x6c, 0x77, 0x16,
	0x3d, 0xb9, 0xea, 0x4b, 0x88, 0xee, 0x8f, 0xf5, 0x16, 0xdb, 0x0d, 0xea, 0x95, 0xc6, 0x62, 0xc2,
	0xec, 0xb9, 0xee, 0xd2, 0xd7, 0xac, 0x5b, 0x16, 0xd9, 0x2f, 0xf3, 0xd1, 0x8e, 0x59, 0x1f, 0xe4,
	0x0e, 0xdb, 0x5a, 0x2a, 0xeb, 0x32, 0x61, 0xf6, 0x12, 0xbc, 0x8f, 0x4a, 0x5a, 0x1b, 0x2a, 0x29,
	0xd1, 0xb2, 0x53, 0x7b, 0xb9, 0xb3, 0x1e, 0x16, 0xcd, 0xa3, 0x32, 0x26, 0x76, 0x54, 0x63, 0xce,
	0x60, 0xce, 0x59, 0x85, 0xfa, 0xe7, 0xb9, 0xfb, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x86, 0x52,
	0x19, 0x5f, 0x03, 0x00, 0x00,
}
